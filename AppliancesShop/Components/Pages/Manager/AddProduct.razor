@page "/addproduct"
@rendermode InteractiveServer
@attribute [StreamRendering]
@inject NavigationManager navManager
@using AppliancesShop.BLL.Models.InputModels
@using AppliancesShop.BLL.Models.OutputModels

<div>
    <form>
        <h2>Добавить товар:</h2>
        @* <div class="conteiner-for-text">
            <label class="text">Категория товара:</label>
            <input @bind=_product.Type class="field" type="text" placeholder="Введите категорию товара">
        </div> *@
        <div class="conteiner-for-text">
            <label class="text">Название товара:</label>
            <input @bind=_product.Name class="field" type="text" placeholder="Введите название товара">
        </div>
        <div class="conteiner-for-text">
            <label class="text">Цена товара:</label>
            <input @bind=_product.Price class="field" type="text" placeholder="Введите цену товара">
        </div>
        <div class="conteiner-for-text">
            <label class="text">Описание товара:</label>
            <input @bind=_product.Description class="field" type="text" placeholder="Введите описание товара">
        </div>
        <div class="conteiner-for-text">
            <label class="text">Ссылка на изображение:</label>
            <input @bind=_product.Img class="field" type="text" placeholder="Введите ссылку на изображение">
        </div>
    </form>

    <div>
        <button @onclick=AddNewProduct>Добавить</button>
    </div>
</div>

@code {
    private ProductInputModel _product;

    private List<ProductOutputModel> _products;

    private ProductClient _productClient;

    public AddProduct()
    {
        _productClient = new ProductClient();
    }

    protected override void OnInitialized()
    {
        _products = _productClient.GetAllProducts().ToList();

        _product = new ProductInputModel();
    }

    public void AddNewProduct()
    {
        _products.Add(_productClient.AddProduct(_product));
    }
}

