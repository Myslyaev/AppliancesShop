@page "/showavailability"
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
@rendermode InteractiveServer
@inject NavigationManager navManager

<PageTitle>@_user.Shop.Name</PageTitle>

<h2>Товары в магазине: @_user.Shop.Name</h2>
<table class="table">
	<thead>
		<tr>
			<th><h4>Товар</h4></th>
			<th><h4>Цена</h4></th>
			<th><h4>Наличие</h4></th>
		</tr>
	</thead>

	<tbody>
		@foreach (var i in _availabilities)
		{
			<tr>
				<AvailabilityCard availability=i></AvailabilityCard>
			</tr>
		}
	</tbody>
</table>

@code {
	[CascadingParameter]
	public Task<AuthenticationState> State { get; set; }

	public IEnumerable<Claim> claims = Enumerable.Empty<Claim>();

	private string _mail;

	private List<AvailabilityOutputModel> _availabilities;

	private AvailabilityClient _availabilityClient;

	private UserOutputModel _user;

	private UserClient _userClient;

	protected override async Task OnInitializedAsync()
	{
		var authState = await State;
		var user = authState.User;

		if (user.Identity is not null && user.Identity.IsAuthenticated)
		{
			claims = user.Claims;
			_mail = claims.Where(c => c.Type == ClaimTypes.Email).Select(c => c.Value).Single();
		}

		GetAvailability();
	}

	public void GetAvailability()
	{
		_availabilityClient = new AvailabilityClient();
		_userClient = new UserClient();

		_user = _userClient.GetUserWithShopsByMail(_mail);
		_availabilities = _availabilityClient.GetAvailabilityByShopId((int)_user.ShopId);
	}
}

